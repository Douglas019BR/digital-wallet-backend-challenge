name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - pipeline
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Setup Docker Compose
        run: |
          # Instalar docker-compose se necess√°rio
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker image
        run: make build

      - name: Start services
        run: make up

      - name: Wait for services to be ready
        run: |
          until docker compose exec -T db pg_isready -U postgres; do
            echo "Waiting for database..."
            sleep 5
          done

      - name: Install dependencies
        run: |
          # Para ambientes CI/CD
          if [ -n "$CI" ]; then
            docker compose exec -T web pip install -r requirements-dev.txt || docker-compose exec -T web pip install -r requirements-dev.txt
          else
            make requirements
          fi

      - name: Run migrations
        run: |
          # Para ambientes CI/CD
          if [ -n "$CI" ]; then
            docker compose exec -T web alembic upgrade head || docker-compose exec -T web alembic upgrade head
          else
            make migrate
          fi

      - name: Create coverage directory with proper permissions
        run: docker compose exec -T web mkdir -p /tmp/coverage && docker compose exec -T web chmod 777 /tmp/coverage

      - name: Run tests with coverage
        run: |
          # Para ambientes CI/CD
          if [ -n "$CI" ]; then
            docker compose exec -T -e COVERAGE_FILE=/tmp/coverage/.coverage web pytest --cov=app --cov-report=xml:/tmp/coverage/coverage.xml || docker-compose exec -T -e COVERAGE_FILE=/tmp/coverage/.coverage web pytest --cov=app --cov-report=xml:/tmp/coverage/coverage.xml
          else
            make test-coverage
          fi
          
      - name: Copy coverage report from container
        run: docker cp $(docker compose ps -q web):/tmp/coverage/coverage.xml ./coverage.xml

      - name: Generate coverage badge
        run: |
          pip install coverage-badge
          coverage-badge -i coverage.xml -o coverage.svg

      - name: Upload coverage badge
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coverage.svg
